<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<c:if test="<%= !PropsValues.SESSION_DISABLED %>">

	<%
	String autoRememberMe = CookieKeys.getCookie(request, CookieKeys.REMEMBER_ME);
	%>

	<c:if test="<%= !themeDisplay.isSignedIn() || Validator.isNull(autoRememberMe) %>">

		<%
		boolean autoExtend = !themeDisplay.isSignedIn() || PropsValues.SESSION_TIMEOUT_AUTO_EXTEND;
		int sessionTimeout = autoExtend ? PropsValues.SESSION_TIMEOUT * 60 - PropsValues.SESSION_TIMEOUT_AUTO_EXTEND_OFFSET : PropsValues.SESSION_TIMEOUT * 60;
		int sessionTimeoutMinute = sessionTimeout * (int)Time.SECOND;
		int sessionTimeoutWarning = autoExtend ? 0 : PropsValues.SESSION_TIMEOUT_WARNING * 60;

		boolean sessionRedirectOnExpire = PropsValues.SESSION_TIMEOUT_REDIRECT_ON_EXPIRE;
		String sessionRedirectUrl = themeDisplay.getURLHome();

		long companyId = themeDisplay.getCompanyId();

		if (PrefsPropsUtil.getBoolean(companyId, PropsKeys.CAS_AUTH_ENABLED, PropsValues.CAS_AUTH_ENABLED) && PropsValues.CAS_LOGOUT_ON_SESSION_EXPIRATION) {
			sessionRedirectOnExpire = true;
			sessionRedirectUrl = PrefsPropsUtil.getString(companyId, PropsKeys.CAS_LOGOUT_URL, PropsValues.CAS_LOGOUT_URL);
		}
		else if (PrefsPropsUtil.getBoolean(companyId, PropsKeys.OPEN_SSO_AUTH_ENABLED, PropsValues.OPEN_SSO_AUTH_ENABLED) && PropsValues.OPEN_SSO_LOGOUT_ON_SESSION_EXPIRATION) {
			sessionRedirectOnExpire = true;
			sessionRedirectUrl = PrefsPropsUtil.getString(companyId, PropsKeys.OPEN_SSO_LOGOUT_URL, PropsValues.OPEN_SSO_LOGOUT_URL);
		}

		Calendar sessionTimeoutCal = CalendarFactoryUtil.getCalendar(timeZone);

		sessionTimeoutCal.add(Calendar.MILLISECOND, sessionTimeoutMinute);
		%>

		<aui:script use="liferay-session">
			Liferay.Session = new Liferay.SessionBase(
				{
					autoExtend: <%= autoExtend %>,
					sessionLength: <%= sessionTimeout %>,
					redirectOnExpire: <%= sessionRedirectOnExpire %>,
					redirectUrl: '<%= HtmlUtil.escapeJS(sessionRedirectUrl) %>',
					warningLength: <%= sessionTimeoutWarning %>
				}
			);

			<c:if test="<%= themeDisplay.isSignedIn() && sessionTimeoutWarning > 0 %>">
				Liferay.Session.plug(Liferay.SessionDisplay);
			</c:if>
		</aui:script>
	</c:if>
</c:if>